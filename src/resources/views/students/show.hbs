<head>
    <link rel="stylesheet" href="/css/list_student.css">
</head>
<div class="wrapper-content">
    <!--Make list student-->
    <div class="list-student">
        <!-- Table -->
        <div class="table-student" ; style="overflow-x:auto;">
            <table>
                <thead>
                    <tr>
                        <th>Nhóm</th>
                        <th>Mã số sinh viên</th>
                        <th>Họ và tên</th>
                        <th>Email</th>
                        <th>Ngày sinh</th>
                        <th>Tên đề tài</th>
                        <th>Mã học phần</th>
                        <th>Tên học phần</th>
                        <th>Học kỳ</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        <!-- Function button -->
        <div class="list-button">
            <a href="#"><i class="fa-solid fa-edit"></i> Sửa</a>
            <a href="#"><i class="fa-solid fa-floppy-disk"></i>Lưu</a>
            <a href="#"><label for="file"><i class="fa-solid fa-file-import"></i>Import Excel</label></a>
            <a href="#"><i class="fa-solid fa-user-plus"></i>Thêm sinh viên</a>
            <input type="file" name="file" id="file" class="inputfile" ng-modal="csvFile" />

        </div>
    </div>
    <!--End make list student-->
</div>

<script>
    const tableView = document.querySelector('.table-student table')

    // tham số render mặc định
    var nhom = 'groupname'
    var mssv = 'StudentID'
    var ten = 'studentname'
    var email = 'Email'
    var deTai = 'Tên đề tài'
    var maHocPhan = 'courseid'
    var tenHocPhan = 'name'
    var hocKy = 'termid'
    var ngaySinh = 'birthdate'
    // hàm render
    function renderTable(studentList) {
        let htmlStudents = studentList.map(function (value) {
            return `<tr><td>${value[nhom]}</td><td>${value[mssv]}</td>
        <td>${value[ten]}</td><td>${value[email]}</td><td>${value[ngaySinh]}</td>
        <td>${value[deTai]}</td><td>${value[maHocPhan]}</td>
        <td>${value[tenHocPhan]}</td><td>${value[hocKy]}</td></tr>`;
        })
        var resultHtml = htmlStudents.join('')
        let tableBody = document.createElement('tbody')
        tableBody.innerHTML = resultHtml
        tableView.appendChild(tableBody)
    }

    // parse file exel
    var parseExcel = [];
    var ExcelExport = function (event) {
        var input = event.target;
        var reader = new FileReader();
        reader.onload = function () {
            var fileData = reader.result;
            var wb = XLSX.read(fileData, { type: 'binary' });

            wb.SheetNames.forEach(function (sheetName) {
                var rowObj = XLSX.utils.sheet_to_row_object_array(wb.Sheets[sheetName]);
                parseExcel = rowObj;
                console.log(rowObj)
                // gọi hàm render
                renderTable(rowObj)
            })
        };
        reader.readAsBinaryString(input.files[0]);
    };
    var inputFile = document.querySelector('#file')
    inputFile.addEventListener('change', ExcelExport, false)



    var promise = new Promise(
        function (resolve, reject) {

        }
    )
    promise.then().catch().finally()

    // khi click vao student
    var cover = document.querySelector('.cover')
    var mockUp = document.querySelector('.click-student')

    var clickStudent = function (e) {
        mockUp.style.display = 'block'
        cover.style.display = 'block'
    }
    var clickCover = function (e) {
        mockUp.style.display = 'none'
        cover.style.display = 'none'
    }
    tableView.addEventListener('click', clickStudent)
    cover.addEventListener('click', clickCover)
</script>